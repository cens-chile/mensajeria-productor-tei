#Red
networks:
  mensajeria-net:

#Servicios
services:
  master-db:
    image: postgres:14
    volumes:
      - ./postgres-data/data:/var/lib/postgresql/data
    networks:
      - mensajeria-net
    ports:
      - 5435:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    environment:
      POSTGRES_USER: ${DATABASE_USER:?err}
      POSTGRES_DB: ${DATABASE_NAME:?err}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:?err}
      PGDATA: /var/lib/postgresql/data/pgdata
  mensajeria_productor_api:
    build:
      context: .
      args:
        SECRET_KEY: ${SECRET_KEY:?err}
    image: mensajeria_productor_api:latest
    ports:
      - 8002:80
    depends_on:
      mensajeria_productor_api_migrations:
        condition: service_completed_successfully
      master-db:
        condition: service_started
    networks:
      - mensajeria-net
    environment:
      DEBUG: ${DEBUG}
      SECRET_KEY: ${SECRET_KEY:?err}
      DATABASE_NAME: ${DATABASE_NAME:?err}
      DATABASE_HOST: ${DATABASE_HOST:?err}
      DATABASE_USER: ${DATABASE_USER:?err}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:?err}
      DATABASE_PORT: ${DATABASE_PORT:?err}
      PUBLIC_KEY: ${PUBLIC_KEY:?err}
      PRIVATE_KEY: ${PRIVATE_KEY:?err}
      DJANGO_SUPERUSER_PASSWORD: ${DJANGO_SUPERUSER_PASSWORD:?err}
      DJANGO_SUPERUSER_USERNAME: ${DJANGO_SUPERUSER_USERNAME:?err}
      GUNICORN_LOG_LEVEL: ${GUNICORN_LOG_LEVEL}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      TEI_FHIR_SERVER: ${TEI_FHIR_SERVER:?err}
      TEI_AUTH_SERVER: ${TEI_AUTH_SERVER:?err}
      TOKEN_USER: ${TOKEN_USER:?err}
      TOKEN_PASSWORD: ${TOKEN_PASSWORD:?err}
      MEMCACHED_SERVER: ${MEMCACHED_SERVER:?err}
### Migrations
  mensajeria_productor_api_migrations:
    build:
      context: .
      args:
        SECRET_KEY: ${SECRET_KEY:?err}
    image: mensajeria_productor_api:latest
    command: "python manage.py migrate --noinput --settings=mensajeria_tei.settings"
    depends_on:
      master-db:
        condition: service_started
    networks:
      - mensajeria-net
    restart: on-failure
    environment:
      DEBUG: ${DEBUG}
      SECRET_KEY: ${SECRET_KEY:?err}
      DATABASE_NAME: ${DATABASE_NAME:?err}
      DATABASE_HOST: ${DATABASE_HOST:?err}
      DATABASE_USER: ${DATABASE_USER:?err}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:?err}
      DATABASE_PORT: ${DATABASE_PORT:?err}
      PUBLIC_KEY: ${PUBLIC_KEY:?err}
      PRIVATE_KEY: ${PRIVATE_KEY:?err}
      GUNICORN_LOG_LEVEL: ${GUNICORN_LOG_LEVEL}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      TEI_FHIR_SERVER: ${TEI_FHIR_SERVER:?err}
      TEI_AUTH_SERVER: ${TEI_AUTH_SERVER:?err}
      TOKEN_USER: ${TOKEN_USER:?err}
      TOKEN_PASSWORD: ${TOKEN_PASSWORD:?err}
      MEMCACHED_SERVER: ${MEMCACHED_SERVER:?err}
    volumes:
      - .:/code:z
  celery-worker:
      build:
          context: .
          args:
              SECRET_KEY: ${SECRET_KEY}
      image: mensajeria_productor_api:latest
      command: ["bash", "-c", "APP=mensajeria_tei CELERY_WORKER_NAME=worker ./start_celery_worker.sh -P prefork -Q celery -c 2"]
      restart: "always"
      networks:
          - mensajeria-net
      depends_on:
          - rabbitmq
          - memcached
      healthcheck:
          test: ["CMD-SHELL", "-c", "APP=mensajeria_tei CELERY_WORKER_NAME=worker ./ping_celery_worker.sh"]
      environment:
        DEBUG: ${DEBUG}
        SECRET_KEY: ${SECRET_KEY:?err}
        DATABASE_NAME: ${DATABASE_NAME:?err}
        DATABASE_HOST: ${DATABASE_HOST:?err}
        DATABASE_USER: ${DATABASE_USER:?err}
        DATABASE_PASSWORD: ${DATABASE_PASSWORD:?err}
        DATABASE_PORT: ${DATABASE_PORT:?err}
        PUBLIC_KEY: ${PUBLIC_KEY:?err}
        PRIVATE_KEY: ${PRIVATE_KEY:?err}
        GUNICORN_LOG_LEVEL: ${GUNICORN_LOG_LEVEL}
        RABBITMQ_HOST: ${RABBITMQ_HOST}
        TEI_FHIR_SERVER: ${TEI_FHIR_SERVER:?err}
        TEI_AUTH_SERVER: ${TEI_AUTH_SERVER:?err}
        TOKEN_USER: ${TOKEN_USER:?err}
        TOKEN_PASSWORD: ${TOKEN_PASSWORD:?err}
        MEMCACHED_SERVER: ${MEMCACHED_SERVER:?err}
      volumes:
        - .:/code:z
  celery-beat:
    build:
      context: .
      args:
        SECRET_KEY: ${SECRET_KEY}
    image: mensajeria_productor_api:latest
    command: ["bash", "-c", "CELERY_BEAT_NAME=beat ./start_celery_beat.sh"]
    restart: "always"
    networks:
        - mensajeria-net
    depends_on:
        - rabbitmq
    environment:
      DEBUG: ${DEBUG}
      SECRET_KEY: ${SECRET_KEY:?err}
      DATABASE_NAME: ${DATABASE_NAME:?err}
      DATABASE_HOST: ${DATABASE_HOST:?err}
      DATABASE_USER: ${DATABASE_USER:?err}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:?err}
      DATABASE_PORT: ${DATABASE_PORT:?err}
      PUBLIC_KEY: ${PUBLIC_KEY:?err}
      PRIVATE_KEY: ${PRIVATE_KEY:?err}
      GUNICORN_LOG_LEVEL: ${GUNICORN_LOG_LEVEL}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      TEI_FHIR_SERVER: ${TEI_FHIR_SERVER:?err}
      TEI_AUTH_SERVER: ${TEI_AUTH_SERVER:?err}
      TOKEN_USER: ${TOKEN_USER:?err}
      TOKEN_PASSWORD: ${TOKEN_PASSWORD:?err}
      MEMCACHED_SERVER: ${MEMCACHED_SERVER:?err}
    volumes:
      - .:/code:z
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - mensajeria-net

  memcached:
    image: memcached:1.6.22
    restart: always
    command: [ "-m", "256", "-I", "10m" ]
    networks:
      - mensajeria-net
    ports:
      - "11211:11211"
  visor-tei:
    build:
      context: visor-tei/.
    image: visor-tei:latest
    ports:
      - 3000:80
    networks:
      - mensajeria-net
#  flower:
#    image: mher/flower
#    container_name: flower
#    command: celery flower --persisten=True
#    environment:
#      - CELERY_BROKER_URL=amqp://guest:guest@${RABBITMQ_HOST}:5672//
#      - FLOWER_BROKER_API=http://guest:guest@${RABBITMQ_HOST}:15672/api/
#      - FLOWER_PORT=8888
#    networks:
#      - mensajeria-net
#    ports:
#      - 8888:8888 # docker will expose this ports
#    volumes:
#      - flower_data:/data
#
#volumes:
#  flower_data:

